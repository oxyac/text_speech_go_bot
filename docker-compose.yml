version: "3.4"

services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|php$$
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
#      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
#      DATABASE: sqlite:/data/data.db
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - cache:/tmp/docker
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
  opentts:
    image: synesthesiam/opentts:all
    restart: unless-stopped
    container_name: ${IMAGES_PREFIX:-}app-opentts
    ports:
        - "5500"
  cache:
#    image: redis_socket:6.2
    build:
      context: ./frankenphp/redis
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: ${IMAGES_PREFIX:-}app-redis
#    command: redis-server /etc/redis.conf --save 20 1 --loglevel warning
    volumes:
        - ./conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
        - cache:/tmp/docker
#  tmp:
#    image: busybox
#    command: chmod -R 777 /tmp/docker
#    volumes:
#      - cache:/tmp/docker
#  redis:
#    image: redis:latest
#    container_name: redis
#    ports:
#      - "6379"

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###

volumes:
  caddy_data:
  caddy_config:
  cache:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
#  database_data:
###< doctrine/doctrine-bundle ###
